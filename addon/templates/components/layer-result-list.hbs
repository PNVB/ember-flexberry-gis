{{#if _showLoader}}
  <div class="ui active inline loader"></div>{{t "components.layer-result-list.processing"}}
{{else if _noData}}
  {{t "components.layer-result-list.nodata"}}
{{/if}}
{{#each _displayResults as |result|}}
  <div class="feature-result-item-group">
    <a class="feature-result-item-select icon item"
      title="{{t "components.feature-result-item.select-all-caption"}}"
      {{action "zoomTo" result.features}}>
      <i class="marker icon"></i>
    </a>
    {{#if result.editable}}
      <a class="feature-result-save icon item"
        title="{{t "components.feature-result-item.save-changes-caption"}}"
        {{action "onSaveChanges" result}}>
        <i class="save icon{{unless result._wasChanged " disabled"}}"></i>
      </a>
    {{/if}}
    {{#if (gt result.listForms.length 0)}}
      {{#if (eq result.listForms.length 1)}}
        <a class="feature-result-item-list icon item"
          title="{{t "components.layer-result-list.select-list-caption"}}"
          href="{{result.listForms.[0].url}}" target="_blank">
          <i class="list icon"></i>
        </a>
      {{else}}
        <div class="ui dropdown item" {{action "toggleLinks" on="click"}}>
          <i class="dropdown icon"></i>
          {{t "components.layer-result-list.select-list-caption"}}
          <div class="ui menu transition {{if _linksExpanded "visible" "hidden"}}">
              {{#each result.listForms as |listForm|}}
                <a class="feature-result-item-list icon item"
                title="{{listForm.typeName}}"
                href="{{listForm.url}}" target="_blank">
                  <i class="list icon"></i>
                </a>
              {{/each}}
          </div>
        </div>
      {{/if}}
    {{/if}}
    {{#flexberry-toggler caption=result.name expanded=result.first class='layer-result-list-toggler'}}
      <div class="ui list transition">
        {{#each result.features as |feature|}}
          {{#if (known-for-type 'component' (concat 'feature-' operationType '-result-item-' result.layerModel.type))}}
            {{component (concat 'feature-' operationType '-result-item-' result.layerModel.type)
              feature=feature
              leafletMap=leafletMap
              infoExpanded=(and (eq result.features.length 1) result.first)
              displayProperty="displayValue"
              displaySettings=result.settings
              selectedFeature=_selectedFeature
              selectFeature=(action "selectFeature")
              panTo=(action "panTo")
              zoomTo=(action "zoomTo")
              triggerChanged=(action "triggerChanged" result)
              editProperties=(action "editProperties" result)
            }}
          {{else}}
            {{feature-result-item
              feature=feature
              infoExpanded=(and (eq result.features.length 1) result.first)
              displayProperty="displayValue"
              displaySettings=result.settings
              selectedFeature=_selectedFeature
              selectFeature=(action "selectFeature")
              panTo=(action "panTo")
              zoomTo=(action "zoomTo")
            }}
          {{/if}}
        {{/each}}
      </div>
      {{/flexberry-toggler}}
  </div>
{{/each}}
{{#if _saveDialogHasBeenRequested}}
  {{flexberry-dialog
    class="layer-result-list-confirm-dialog"
    caption=(t "components.layer-result-list.save-confirm-dialog.caption")
    content=(t "components.layer-result-list.save-confirm-dialog.content")
    approveButtonCaption=(t "components.layer-result-list.save-confirm-dialog.approve-caption")
    denyButtonCaption=(t "components.layer-result-list.save-confirm-dialog.deny-caption")
    visible=_saveDialogVisibility
    approve=(action "onSaveDialogApprove")
    deny=(action "onSaveDialogDeny")
    hide=(action "onSaveDialogHide")
  }}
{{/if}}
{{#if _editDialogHasBeenRequested}}
  {{component "layers-dialogs/attributes/edit"
    visible=_onEditDialogIsVisible
    fieldNames=(get _editDialogParams "header")
    fieldTypes=(get _editDialogParams "fieldTypes")
    fieldParsers=(get _editDialogParams "fields")
    fieldValidators=(get _editDialogParams "fieldValidators")
    data=(get _editDialogParams "editData")
    approve=(action "onEditDialogApprove")
  }}
{{/if}}
